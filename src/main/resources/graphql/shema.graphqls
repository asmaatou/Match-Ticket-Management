
type Match{
    id:ID,
    reference:String,
    date:String,
    lieu:String,
    equipe1:String,
    equipe2:String,
    ticketList:[Ticket]
}

type Ticket{
    id:ID,
    reference:String,
    prix:Float,
    status:String
    match:Match
}

input  MatchRequestDto{
    date:String,
    lieu:String,
    equipe1:String,
    equipe2:String,

}

input  TicketRequestDto{
    prix:Float
}

type MatchResponseDto{
    id:ID,
    reference:String,
    date:String,
    lieu:String,
    equipe1:String,
    equipe2:String,
    ticketList:[Ticket]
}
type TicketResponseDto{
    id:ID,
    reference:String,
    prix:Float,
    status:String
}

type Query{
    getMatchs:[MatchResponseDto],
    getMatchById(id:ID):MatchResponseDto,

    getTickets:[Ticket],
    getTicketById(id:ID):Ticket
}

type Mutation{

    addMatch(m:MatchRequestDto):MatchResponseDto,
    updateMatch(id:ID,m:MatchRequestDto):MatchResponseDto,
    deleteMatch(id:ID):String


    deleteTicket(id:ID):String

    addTicket(t:TicketRequestDto):TicketResponseDto,
    updateTicket(id:ID,t:TicketRequestDto):TicketResponseDto,



}